# Files in the config/locales directory are used for internationalization
# and are automatically loaded by Rails. If you want to use locales other
# than English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t 'hello'
#
# In views, this is aliased to just `t`:
#
#     <%= t('hello') %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# To learn more, please read the Rails Internationalization guide
# available at http://guides.rubyonrails.org/i18n.html.

en:
   activerecord:
      errors:
         invalid_patronymic: has invalid form for a patronymic
         invalid_last_name: has invalid form for a last name
         invalid_language_char: contains invalid char(s) "%{chars}" for the specified alphabeth "%{alphabeth}"
         invalid_utf8_char: contains invalid utf-8 char(s) %{parts} for the specified alphabeth "%{alphabeth}"
         languages_arent_same: The languages of ifself, and descendant aren't the same
         invalid_uri: "%{uri} is invalid"
         inaccessible_uri: "is inaccessible at %{uri}"
         models:
            subject:
               attributes:
                  meta:
                     invalid_json: "has improper according to schema JSON"
         models:
            calendary:
               attributes:
                  meta:
                     invalid_json: "has improper according to schema JSON"
         size:
            height:
               min: "has %{value} px. height less than %{cond} px."
               max: "has %{value} px. height more than %{cond} px."
               range: "has %{value} px. height that is unmatched to the range %{cond}"
            width:
               min: "has %{value} px. width less than %{cond} px."
               max: "has %{value} px. width more than %{cond} px."
               range: "has %{value} px. width that is unmatched to the range %{cond}"
            ratio:
               min: "has %{value} aspect ratio less than %{cond}"
               max: "has %{value} aspect ratio more than %{cond}"
               range: "has %{value} aspect ratio that is unmatched to the range %{cond}"
